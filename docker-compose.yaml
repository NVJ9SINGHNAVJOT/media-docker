---
version: '3.8'

volumes:
  # NOTE: do not change this name (breaking changes)
  media-docker-files-volume:
  media-docker-upload-volume:
  media-docker-kafka_data:
  # NOTE: Uncomment the volumes below to enable the Kafka cluster.
  # media-docker-kafka-1_data:
  # media-docker-kafka-2_data:

networks:
  proxy:
    external: true
  media-docker-proxy:

services:
  media-docker-client:
    build:
      context: .
      dockerfile: ./internal/media-docker-client/Dockerfile
    container_name: media-docker-client
    volumes:
      # NOTE: do not change the mapping of volume (breaking changes)
      - media-docker-files-volume:/app/media_docker_files:ro
    networks:
        - proxy
    ports: [7000:7000] # Disable in production
    env_file: .env.client
    depends_on:
      - media-docker-server  # If only the client is required to access media files, comment out this line.

  media-docker-server:
    build:
      context: .
      dockerfile: ./internal/media-docker-server/Dockerfile
    container_name: media-docker-server
    volumes:
      # NOTE: do not change the mapping of volume (breaking changes)
      - media-docker-upload-volume:/app/uploadStorage:rw
      - media-docker-files-volume:/app/media_docker_files:ro
    networks:
        - proxy
        - media-docker-proxy
    ports: [7007:7007] # Disable in production
    env_file: .env.server
    depends_on:
      - media-docker-kafka
      - media-docker-kafka-consumer
  
  media-docker-kafka-consumer:
    build:
      context: .
      dockerfile: ./internal/media-docker-kafka-consumer/Dockerfile
    container_name: media-docker-kafka-consumer
    volumes:
      # NOTE: do not change the mapping of volume (breaking changes)
      - media-docker-upload-volume:/app/uploadStorage:rw
      - media-docker-files-volume:/app/media_docker_files:rw
    networks:
        - media-docker-proxy
    env_file: .env.consumer
    depends_on:
      - media-docker-kafka

  # NOTE: To enable a cluster of brokers, comment out the Kafka broker configuration below and use the next services for the cluster.
  media-docker-kafka:
    image: docker.io/bitnami/kafka:3.3.2
    container_name: media-docker-kafka
    volumes:
      - media-docker-kafka_data:/bitnami/kafka
    networks:
      - media-docker-proxy
    restart: unless-stopped
    environment:
      # KRaft settings
      - KAFKA_KRAFT_CLUSTER_ID=gZpsEhujeRQwA249Kx5KKg
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_NODE_ID=0  # Unique Node ID
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@media-docker-kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://media-docker-kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
    
  # NOTE: To enable a cluster of brokers, uncomment the Kafka broker configurations below.
  # media-docker-kafka:
  #   image: docker.io/bitnami/kafka:3.3.2
  #   container_name: media-docker-kafka
  #   volumes:
  #     - media-docker-kafka_data:/bitnami/kafka
  #   networks:
  #     - media-docker-proxy
  #   restart: unless-stopped
  #   environment:
  #     # KRaft settings
  #     - KAFKA_KRAFT_CLUSTER_ID=gZpsEhujeRQwA249Kx5KKg
  #     - KAFKA_ENABLE_KRAFT=yes
  #     - KAFKA_CFG_PROCESS_ROLES=broker,controller
  #     - KAFKA_CFG_NODE_ID=0  # Unique Node ID
  #     - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@media-docker-kafka:9093,1@media-docker-kafka-1:9093,2@media-docker-kafka-2:9093
  #     # Listeners
  #     - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
  #     - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://media-docker-kafka:9092
  #     - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
  #     - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
  #     - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
  #     - ALLOW_PLAINTEXT_LISTENER=yes
  #     # Clustering
  #     - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=3
  #     - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=3
  #     - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=2

  # media-docker-kafka-1:
  #   image: docker.io/bitnami/kafka:3.3.2
  #   container_name: media-docker-kafka-1
  #   volumes:
  #     - media-docker-kafka-1_data:/bitnami/kafka
  #   networks:
  #     - media-docker-proxy
  #   restart: unless-stopped
  #   environment:
  #     # KRaft settings
  #     - KAFKA_KRAFT_CLUSTER_ID=gZpsEhujeRQwA249Kx5KKg
  #     - KAFKA_ENABLE_KRAFT=yes
  #     - KAFKA_CFG_PROCESS_ROLES=broker,controller
  #     - KAFKA_CFG_NODE_ID=1  # Unique Node ID
  #     - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@media-docker-kafka:9093,1@media-docker-kafka-1:9093,2@media-docker-kafka-2:9093
  #     # Listeners
  #     - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
  #     - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://media-docker-kafka-1:9092
  #     - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
  #     - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
  #     - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
  #     - ALLOW_PLAINTEXT_LISTENER=yes
  #     # Clustering
  #     - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=3
  #     - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=3
  #     - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=2

  # media-docker-kafka-2:
  #   image: docker.io/bitnami/kafka:3.3.2
  #   container_name: media-docker-kafka-2
  #   volumes:
  #     - media-docker-kafka-2_data:/bitnami/kafka
  #   networks:
  #     - media-docker-proxy
  #   restart: unless-stopped
  #   environment:
  #     # KRaft settings
  #     - KAFKA_KRAFT_CLUSTER_ID=gZpsEhujeRQwA249Kx5KKg
  #     - KAFKA_ENABLE_KRAFT=yes
  #     - KAFKA_CFG_PROCESS_ROLES=broker,controller
  #     - KAFKA_CFG_NODE_ID=2  # Unique Node ID
  #     - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@media-docker-kafka:9093,1@media-docker-kafka-1:9093,2@media-docker-kafka-2:9093
  #     # Listeners
  #     - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
  #     - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://media-docker-kafka-2:9092
  #     - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
  #     - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
  #     - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
  #     - ALLOW_PLAINTEXT_LISTENER=yes
  #     # Clustering
  #     - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=3
  #     - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=3
  #     - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=2
