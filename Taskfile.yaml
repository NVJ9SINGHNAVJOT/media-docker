---
version: "3"

dotenv:
  - ".env"

interval: 500ms

tasks:
  i:
    desc: download dependencies and verify integrity
    cmds:
      - go mod download
      - go mod verify

  tidy:
    desc: runs go mod tidy
    cmds:
      - go mod tidy

  build:
    desc: builds the project
    cmds:
      - cd cmd/media-docker-server && go build -o ../../dist/server-main main.go
      - cd cmd/media-docker-client && go build -o ../../dist/client-main main.go
      - cd cmd/media-docker-kafka-consumer && go build -o ../../dist/consumer-main main.go

  create-topics-development:
    desc: create topics for kafka from ./task_scripts/create_kafka_topics_development.sh
    vars:
      KAFKA_CONTAINER: "media-docker-kafka-development" # Dynamically defined container name
    cmd:
      # Windows (Git Bash)
      bash ./task_scripts/create_kafka_topics.sh "{{.KAFKA_CONTAINER}}"

  create-topics:
    desc: create topics for kafka from ./task_scripts/create_kafka_topics.sh
    vars:
      KAFKA_CONTAINER: "media-docker-kafka" # Dynamically defined container name
    cmd:
      # Windows (Git Bash)
      bash ./task_scripts/create_kafka_topics.sh "{{.KAFKA_CONTAINER}}"

  dev-kafka:
    desc: start the Kafka container for development
    cmd:
      # Windows (Git Bash)
      bash ./task_scripts/media_docker_kafka_development.sh
        
  client:
    desc: run client main.go file
    cmds:
      - go run cmd/media-docker-client/main.go

  server:
    desc: run server main.go file
    cmds:
      - go run cmd/media-docker-server/main.go
 
  consumer:
    desc: run consumer main.go file
    cmds:
      - go run cmd/media-docker-kafka-consumer/main.go

  compose-up:
    desc: starts media-docker containers
    cmds:
      - docker compose up -d

  compose-down:
    desc: stops media-docker containers
    cmds:
      - docker compose down
