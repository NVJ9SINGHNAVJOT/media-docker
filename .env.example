# NOTE: For the media-docker project services, you need to create the following 4 env files:
# .env.client    : media-docker-client
# .env.server    : media-docker-server
# .env.consumer  : media-docker-kafka-consumer
# .env.failed    : media-docker-failed-consumer




# ----- create `.env.client` file ----- #

# Client environment config
ENVIRONMENT=development
# Allowed origins for CORS (front-end URLs)
ALLOWED_ORIGINS_CLIENT=http://localhost:5173,http://localhost:4173
# Client service port
CLIENT_PORT=7000




# ----- create `.env.server` file ----- #

# Server environment config
ENVIRONMENT=development
# Allowed origins for CORS (back-end URLs)
ALLOWED_ORIGINS_SERVER=http://localhost:5000,http://localhost:5005
# Authentication key for the server
SERVER_KEY=your_secure_key
# Kafka brokers list separated by commas (for Docker use <service-name>:<port>)
KAFKA_BROKERS=localhost:9092
# Server port
SERVER_PORT=7007
# Base URL for the client
# This URL will be used in fileUrl for responses, allowing the media-docker-client to access media files.
BASE_URL=http://localhost:7000




# ----- create `.env.consumer` file ----- #

# Kafka consumer environment config
ENVIRONMENT=development
# Kafka brokers list separated by commas (for Docker use <service-name>:<port>)
KAFKA_BROKERS=localhost:9092
# Kafka workers for "video" topic
KAFKA_VIDEO_WORKERS=2
# Kafka workers for "video-resolutions" topic
KAFKA_VIDEO_RESOLUTIONS_WORKERS=2
# Kafka workers for "image" topic
KAFKA_IMAGE_WORKERS=1
# Kafka workers for "audio" topic
KAFKA_AUDIO_WORKERS=1
# Kafka workers for "delete-file" topic
KAFKA_DELETE_FILE_WORKERS=1




# ----- create `.env.failed` file ----- #

# Failed consumer environment config
ENVIRONMENT=development
# Kafka brokers list separated by commas (for Docker use <service-name>:<port>)
KAFKA_BROKERS=localhost:9092
# Kafka workers for "failed-letter-queue" topic
KAFKA_FAILED_WORKERS=1